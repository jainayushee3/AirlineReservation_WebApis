//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AirlineProject.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbAirlineProjectEntitiesOne : DbContext
    {
        public dbAirlineProjectEntitiesOne()
            : base("name=dbAirlineProjectEntitiesOne")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblFlight_Details> tblFlight_Details { get; set; }
        public virtual DbSet<tblFlight_Schedule> tblFlight_Schedule { get; set; }
        public virtual DbSet<tblSeat_Details> tblSeat_Details { get; set; }
        public virtual DbSet<tblTicket_Details> tblTicket_Details { get; set; }
        public virtual DbSet<tblUser> tblUsers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tblPassenger_Details> tblPassenger_Details { get; set; }
    
        public virtual ObjectResult<string> proc_GetDestinationLocations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_GetDestinationLocations");
        }
    
        public virtual int proc_getPrice(Nullable<int> sid)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_getPrice", sidParameter);
        }
    
        public virtual ObjectResult<proc_getSchedule_Result> proc_getSchedule(Nullable<System.DateTime> date, string s, string d)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            var dParameter = d != null ?
                new ObjectParameter("d", d) :
                new ObjectParameter("d", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_getSchedule_Result>("proc_getSchedule", dateParameter, sParameter, dParameter);
        }
    
        public virtual ObjectResult<string> proc_GetSourceLocations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_GetSourceLocations");
        }
    
        public virtual int proc_ReturnPrice(Nullable<int> sid)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_ReturnPrice", sidParameter);
        }
    
        public virtual ObjectResult<string> proc_getBookedSeats(Nullable<int> schedule_Id)
        {
            var schedule_IdParameter = schedule_Id.HasValue ?
                new ObjectParameter("schedule_Id", schedule_Id) :
                new ObjectParameter("schedule_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_getBookedSeats", schedule_IdParameter);
        }
    
        public virtual ObjectResult<proc_LoginCheck_Result> proc_LoginCheck(string uname, string pass)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_LoginCheck_Result>("proc_LoginCheck", unameParameter, passParameter);
        }
    
        public virtual int proc_BookSeats(Nullable<int> sid, string seatno, string seatclass, string seatstatus, Nullable<int> receiptid)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var seatnoParameter = seatno != null ?
                new ObjectParameter("seatno", seatno) :
                new ObjectParameter("seatno", typeof(string));
    
            var seatclassParameter = seatclass != null ?
                new ObjectParameter("seatclass", seatclass) :
                new ObjectParameter("seatclass", typeof(string));
    
            var seatstatusParameter = seatstatus != null ?
                new ObjectParameter("seatstatus", seatstatus) :
                new ObjectParameter("seatstatus", typeof(string));
    
            var receiptidParameter = receiptid.HasValue ?
                new ObjectParameter("receiptid", receiptid) :
                new ObjectParameter("receiptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_BookSeats", sidParameter, seatnoParameter, seatclassParameter, seatstatusParameter, receiptidParameter);
        }
    
        public virtual int proc_BookTicket(Nullable<int> sid, Nullable<int> userid, string triptype, Nullable<int> otherri, Nullable<int> not, string ticstatus, Nullable<double> total)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var triptypeParameter = triptype != null ?
                new ObjectParameter("triptype", triptype) :
                new ObjectParameter("triptype", typeof(string));
    
            var otherriParameter = otherri.HasValue ?
                new ObjectParameter("otherri", otherri) :
                new ObjectParameter("otherri", typeof(int));
    
            var notParameter = not.HasValue ?
                new ObjectParameter("not", not) :
                new ObjectParameter("not", typeof(int));
    
            var ticstatusParameter = ticstatus != null ?
                new ObjectParameter("ticstatus", ticstatus) :
                new ObjectParameter("ticstatus", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_BookTicket", sidParameter, useridParameter, triptypeParameter, otherriParameter, notParameter, ticstatusParameter, totalParameter);
        }
    
        public virtual int proc_EnterPassengers(Nullable<int> uid, string name, Nullable<int> age, Nullable<int> seatID)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var seatIDParameter = seatID.HasValue ?
                new ObjectParameter("seatID", seatID) :
                new ObjectParameter("seatID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_EnterPassengers", uidParameter, nameParameter, ageParameter, seatIDParameter);
        }
    
        public virtual int cancel_tickets(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cancel_tickets", idParameter);
        }
    
        public virtual int seat_numbers(Nullable<int> ticket_Id)
        {
            var ticket_IdParameter = ticket_Id.HasValue ?
                new ObjectParameter("Ticket_Id", ticket_Id) :
                new ObjectParameter("Ticket_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("seat_numbers", ticket_IdParameter);
        }
    
        public virtual ObjectResult<ticket_details_Result> ticket_details()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ticket_details_Result>("ticket_details");
        }
    
        public virtual int delete_flight(Nullable<int> fid)
        {
            var fidParameter = fid.HasValue ?
                new ObjectParameter("fid", fid) :
                new ObjectParameter("fid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_flight", fidParameter);
        }
    
        public virtual int delete_schedule(Nullable<int> schedule_id)
        {
            var schedule_idParameter = schedule_id.HasValue ?
                new ObjectParameter("schedule_id", schedule_id) :
                new ObjectParameter("schedule_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_schedule", schedule_idParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_GetRecentlyBookedSeats(Nullable<int> receiptid)
        {
            var receiptidParameter = receiptid.HasValue ?
                new ObjectParameter("receiptid", receiptid) :
                new ObjectParameter("receiptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_GetRecentlyBookedSeats", receiptidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_ReturnReceiptID(Nullable<int> sid, Nullable<int> userid, string triptype, Nullable<int> otherri, Nullable<int> not, string ticstatus, Nullable<double> total)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var triptypeParameter = triptype != null ?
                new ObjectParameter("triptype", triptype) :
                new ObjectParameter("triptype", typeof(string));
    
            var otherriParameter = otherri.HasValue ?
                new ObjectParameter("otherri", otherri) :
                new ObjectParameter("otherri", typeof(int));
    
            var notParameter = not.HasValue ?
                new ObjectParameter("not", not) :
                new ObjectParameter("not", typeof(int));
    
            var ticstatusParameter = ticstatus != null ?
                new ObjectParameter("ticstatus", ticstatus) :
                new ObjectParameter("ticstatus", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_ReturnReceiptID", sidParameter, useridParameter, triptypeParameter, otherriParameter, notParameter, ticstatusParameter, totalParameter);
        }
    
        public virtual int sp_Cancel_tickets(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Cancel_tickets", idParameter);
        }
    
        public virtual ObjectResult<sp_ticket_schedule_details_Result> sp_ticket_schedule_details(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ticket_schedule_details_Result>("sp_ticket_schedule_details", idParameter);
        }
    
        public virtual ObjectResult<string> sp_ticket_seat_details(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_ticket_seat_details", idParameter);
        }
    
        public virtual ObjectResult<proc_getTickets_Result> proc_getTickets(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_getTickets_Result>("proc_getTickets", idParameter);
        }
    }
}
